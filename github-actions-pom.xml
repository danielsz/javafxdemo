<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.danielsz</groupId>
  <artifactId>javafxdemo</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <packaging>clojure</packaging>
  <name>javafxdemo</name>
  <distributionManagement>
    <repository />
  </distributionManagement>
  <properties>
    <maven.compiler.target>11</maven.compiler.target>
    <main.class>javafxdemo.core</main.class>
    <maven.compiler.source>11</maven.compiler.source>
    <javafx.class>javafxdemo.core.App</javafx.class>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>clojure</artifactId>
      <version>1.10.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>15</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo1.maven.org/maven2/</url>
    </repository>
    <repository>
      <id>clojars</id>
      <url>https://repo.clojars.org/</url>
    </repository>
    <repository>
      <id>sapiens</id>
      <url>https://nexus.tuppu.net/repository/sapiens/</url>
    </repository>
    <repository>
      <id>archetype</id>
      <url>https://nexus.tuppu.net/repository/meyvn-templates/</url>
    </repository>
    <repository>
      <id>meyvn</id>
      <url>https://nexus.tuppu.net/repository/meyvn/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>Central Repository</name>
      <url>https://repo.maven.apache.org/maven2</url>
    </pluginRepository>
  </pluginRepositories>
  <build>
    <sourceDirectory>src</sourceDirectory>
    <scriptSourceDirectory>./src/main/scripts</scriptSourceDirectory>
    <testSourceDirectory>./src/test/java</testSourceDirectory>
    <outputDirectory>./target/classes</outputDirectory>
    <testOutputDirectory>./target/test-classes</testOutputDirectory>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
        <version>3.3.3</version>
      </extension>
    </extensions>
    <resources>
      <resource>
        <directory>resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>./src/test/resources</directory>
      </testResource>
    </testResources>
    <directory>./target</directory>
    <finalName>javafxdemo-0.1.0</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.theoryinpractise</groupId>
        <artifactId>clojure-maven-plugin</artifactId>
        <version>1.8.4</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>default-test</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <sourceDirectories>
            <sourceDirectory>src</sourceDirectory>
          </sourceDirectories>
          <nreplMiddlewares>
            <middleware>cider.nrepl/wrap-apropos</middleware>
            <middleware>cider.nrepl/wrap-classpath</middleware>
            <middleware>cider.nrepl/wrap-clojuredocs</middleware>
            <middleware>cider.nrepl/wrap-complete</middleware>
            <middleware>cider.nrepl/wrap-content-type</middleware>
            <middleware>cider.nrepl/wrap-debug</middleware>
            <middleware>cider.nrepl/wrap-enlighten</middleware>
            <middleware>cider.nrepl/wrap-format</middleware>
            <middleware>cider.nrepl/wrap-info</middleware>
            <middleware>cider.nrepl/wrap-inspect</middleware>
            <middleware>cider.nrepl/wrap-macroexpand</middleware>
            <middleware>cider.nrepl/wrap-ns</middleware>
            <middleware>cider.nrepl/wrap-out</middleware>
            <middleware>cider.nrepl/wrap-profile</middleware>
            <middleware>cider.nrepl/wrap-refresh</middleware>
            <middleware>cider.nrepl/wrap-resource</middleware>
            <middleware>cider.nrepl/wrap-slurp</middleware>
            <middleware>cider.nrepl/wrap-spec</middleware>
            <middleware>cider.nrepl/wrap-stacktrace</middleware>
            <middleware>cider.nrepl/wrap-test</middleware>
            <middleware>cider.nrepl/wrap-trace</middleware>
            <middleware>cider.nrepl/wrap-tracker</middleware>
            <middleware>cider.nrepl/wrap-undef</middleware>
            <middleware>cider.nrepl/wrap-version</middleware>
            <middleware>cider.nrepl/wrap-xref</middleware>
            <middleware>meyvn.nrepl-middleware.deps/wrap-deps</middleware>
            <middleware>system.nrepl-middleware/wrap-system</middleware>
          </nreplMiddlewares>
          <port>:auto</port>
          <nreplHost>127.0.0.1</nreplHost>
          <args>foo</args>
          <copiedNamespaces>
            <copiedNamespace>!.*</copiedNamespace>
          </copiedNamespaces>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.3.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.0.0-M1</version>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.2</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.7</version>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
          <execution>
            <configuration>
              <rules>
                <dependencyConvergence />
                <requireMavenVersion>
                  <version>3.3</version>
                </requireMavenVersion>
              </rules>
              <fail>false</fail>
              <failFast>false</failFast>
              <skip>true</skip>
            </configuration>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>fr.jcgay.maven.plugins</groupId>
        <artifactId>buildplan-maven-plugin</artifactId>
        <version>1.3</version>
      </plugin>
      <plugin>
        <groupId>tk.skuro</groupId>
        <artifactId>plan-maven-plugin</artifactId>
        <version>1.2</version>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.meyvn</groupId>
            <artifactId>shade-edn-data-readers-transformer</artifactId>
            <version>1.0.0</version>
          </dependency>
        </dependencies>
        <configuration>
          <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
              <manifestEntries>
                <Main-Class>${main.class}</Main-Class>
                <Implementation-Version>${project.version}</Implementation-Version>
                <Implementation-Title>${project.artifactId}</Implementation-Title>
                <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
              </manifestEntries>
            </transformer>
            <transformer implementation="org.danielsz.shade.resource.EdnDataReaderTransformer">
              <resource>data_readers.clj</resource>
            </transformer>
          </transformers>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes />
            </filter>
          </filters>
          <artifactSet>
            <excludes />
          </artifactSet>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>0.0.4</version>
        <configuration>
          <mainClass>${javafx.class}</mainClass>
          <commandlineArgs />
          <options />
          <launcher>${project.artifactId}</launcher>
          <jlinkImageName>${project.artifactId}-image</jlinkImageName>
          <jlinkZipName>${project.artifactId}-zip</jlinkZipName>
          <jlinkVerbose />
        </configuration>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <outputDirectory>./target/site</outputDirectory>
  </reporting>
</project>
